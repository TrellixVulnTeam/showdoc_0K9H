{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/user/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/user/Register.vue","mtime":1622951741107},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVnaXN0ZXInLAogIGNvbXBvbmVudHM6IHsKICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcm5hbWU6ICcnLAogICAgICBwYXNzd29yZDogJycsCiAgICAgIGNvbmZpcm1QYXNzd29yZDogJycKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIG9uU3VibWl0ICgpIHsKICAgICAgLy8gdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHRoaXMudXNlcm5hbWUpCiAgICAgIHZhciB1cmwgPSBEb2NDb25maWcuc2VydmVyICsgJy91c2VyL3JlZ2lzdGVyJwoKICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCh1cmwsIHsKICAgICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSwKICAgICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCwKICAgICAgICBjb25maXJtUGFzc3dvcmQ6IHRoaXMuY29uZmlybVBhc3N3b3JkCiAgICAgIH0pCiAgICAgIGlmIChyZXMuc3RhdHVzICE9PSAyMDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tZXNzYWdlKQogICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmt7vliqDnlKjmiLfmiJDlip8nKQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvdXNlci9sb2dpbicpCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgLy8g57uZYm9keea3u+WKoOexu++8jOiuvue9ruiDjOaZr+iJsgogICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXS5jbGFzc05hbWUgPSAnZ3JleS1iZycKICB9LAogIGJlZm9yZURlc3Ryb3kgKCkgewogICAgLy8g5Y675o6J5re75Yqg55qE6IOM5pmv6ImyCiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUF0dHJpYnV0ZSgnY2xhc3MnLCAnZ3JleS1iZycpCiAgfQp9Cg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div class=”hello“>\n    <Header> </Header>\n    <el-container>\n          <el-card class=\"center-card\">\n            <el-form  status-icon  label-width=\"0px\" class=\"demo-ruleForm\">\n              <h2>{{$t(\"register\")}}</h2>\n              <el-form-item label=\"\" >\n                <el-input type=\"text\" auto-complete=\"off\" :placeholder='$t(\"username_description\")' v-model=\"username\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"\" >\n                <el-input type=\"password\" auto-complete=\"off\" v-model=\"password\" :placeholder='$t(\"password\")'></el-input>\n              </el-form-item>\n              <el-form-item label=\"\" >\n                <el-input type=\"password\" auto-complete=\"off\" v-model=\"confirmPassword\" :placeholder='$t(\"password_again\")'></el-input>\n              </el-form-item>\n               <el-form-item label=\"\" >\n                <el-button type=\"primary\" style=\"width:100%;\" @click=\"onSubmit\" >{{$t(\"register\")}}</el-button>\n              </el-form-item>\n              <el-form-item label=\"\" >\n                  <router-link to=\"/user/login\">{{$t(\"login\")}}</router-link>\n                  &nbsp;&nbsp;&nbsp;\n              </el-form-item>\n            </el-form>\n          </el-card>\n    </el-container>\n    <Footer> </Footer>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'Register',\n  components: {\n  },\n  data () {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: ''\n    }\n  },\n  methods: {\n    async onSubmit () {\n      // this.$message.success(this.username)\n      var url = DocConfig.server + '/user/register'\n\n      const { data: res } = await this.$http.post(url, {\n        username: this.username,\n        password: this.password,\n        confirmPassword: this.confirmPassword\n      })\n      if (res.status !== 200) return this.$message.error(res.message)\n      if (res.status === 200) {\n        this.$message.success('添加用户成功')\n        this.$router.push('/user/login')\n      }\n    }\n  },\n  mounted () {\n    // 给body添加类，设置背景色\n    document.getElementsByTagName('body')[0].className = 'grey-bg'\n  },\n  beforeDestroy () {\n    // 去掉添加的背景色\n    document.body.removeAttribute('class', 'grey-bg')\n  }\n}\n</script>\n<!-- Add 'scoped' attribute to limit CSS to this component only -->\n<style scoped>\n.center-card a {\n  font-size: 12px;\n}\n.center-card{\n  text-align: center;\n}\n</style>\n"]}]}