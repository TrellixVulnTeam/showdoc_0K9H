{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/catalog/Index.vue?vue&type=style&index=0&id=495714fc&scoped=true&lang=css&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/catalog/Index.vue","mtime":1623131873801},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWxsb3sKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci5hZGQtY2F0ewogIG1hcmdpbi1sZWZ0OiAxMHB4Owp9Ci5jZW50ZXItY2FyZHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHdpZHRoOiA4MDBweDsKICBoZWlnaHQ6IDcwMHB4Owp9Ci5nb2JhY2stYnRuewogIHotaW5kZXg6IDk5OTsKICBtYXJnaW4tbGVmdDogNDAwcHg7Cn0KLmNhdC1ib3ggewogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDI1MCwgMjUwKTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDQwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZDlkOWQ5OwogIGJvcmRlci1yYWRpdXM6IDJweDsKfQouY2F0LW5hbWUgewogIGxpbmUtaGVpZ2h0OiA0MHB4OwogIG1hcmdpbi1sZWZ0OiAyMHB4OwogIGNvbG9yOiAjMjYyNjI2Owp9Ci50cmVlLW5vZGUgewogIG1hcmdpbi10b3A6IDIwcHg7Cn0KLmN1c3RvbS10cmVlLW5vZGUgewogIHdpZHRoOiAxMDAlOwp9Ci5yaWdodC1iYXIgewogIGZsb2F0OiByaWdodDsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7Cn0KLnRpcHMgewogIG1hcmdpbi1sZWZ0OiAxMHB4OwogIGNvbG9yOiAjOWVhMWE2OwogIGZvbnQtc2l6ZTogMTFweDsKfQo="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components/catalog","sourcesContent":["<template>\n  <div class=\"hello\">\n    <Header> </Header>\n\n    <el-container>\n      <el-card class=\"center-card\">\n      <el-row>\n      <el-button  type=\"text\" class=\"add-cat\" @click=\"add_cat()\">{{$t('add_cat')}}</el-button>\n      <el-button type=\"text\" class=\"goback-btn\" @click=\"goback\">{{$t('goback')}}</el-button>\n      </el-row>\n      <p class=\"tips\" v-if=\"treeData.length > 1\">{{ $t('cat_tips') }}</p>\n       <el-tree\n          class=\"tree-node\"\n          :data=\"treeData\"\n          node-key=\"id\"\n          :props=\"defaultProps\"\n          default-expand-all\n          @node-drag-end=\"handleDragEnd\"\n          draggable\n        >\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span>{{ node.label }}</span>\n            <span class=\"right-bar\">\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                :title=\"$t('edit')\"\n                class=\"el-icon-edit\"\n                @click.stop=\"edit(node, data)\"\n              ></el-button>\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                class=\"el-icon-plus\"\n                :title=\"$t('add_cat')\"\n                @click.stop=\"add_cat(node, data)\"\n              ></el-button>\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                class=\"el-icon-document\"\n                :title=\"$t('sort_pages')\"\n                @click.stop=\"showSortPage(node, data)\"\n              ></el-button>\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                class=\"el-icon-copy-document\"\n                :title=\"$t('copy_or_mv_cat')\"\n                @click.stop=\"copyCat(node, data)\"\n              ></el-button>\n              <el-button\n                type=\"text\"\n                size=\"mini\"\n                class=\"el-icon-delete\"\n                @click.stop=\"delete_cat(node, data)\"\n              ></el-button>\n            </span>\n          </span>\n        </el-tree>\n      </el-card>\n\n      <el-dialog :visible.sync=\"dialogFormVisible\"  width=\"300px\" :close-on-click-modal=\"false\" >\n        <el-form >\n            <el-form-item :label=\"$t('cat_name')+' : '\" >\n              <el-input  :placeholder=\"$t('input_cat_name')\" v-model=\"MyForm.cat_name\"></el-input>\n            </el-form-item>\n            <el-form-item :label=\"$t('parent_cat_name')+' : '\" >\n              <el-select v-model=\"MyForm.parent_cat_id\" :placeholder=\"$t('none')\">\n                  <el-option\n                    v-for=\"item in belong_to_catalogs\"\n                    :key=\"item.cat_id\"\n                    :label=\"item.cat_name\"\n                    :value=\"item.cat_id\">\n                  </el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item :label=\"$t('cat_lang')+' : '\" >\n              <el-select v-model=\"MyForm.cid\" :placeholder=\"$t('select')\">\n                  <el-option\n                    v-for=\"item in lang\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item.id\">\n                  </el-option>\n                </el-select>\n            </el-form-item>\n        </el-form>\n\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible = false\">{{$t('cancel')}}</el-button>\n          <el-button type=\"primary\" @click=\"MyFormSubmit\" >{{$t('confirm')}}</el-button>\n        </div>\n      </el-dialog>\n    </el-container>\n    <SortPage\n      :belong_to_catalogs=\"belong_to_catalogs\"\n      :item_id=\"item_id\"\n      :cat_id=\"curl_cat_id\"\n      ref=\"SortPage\"\n    ></SortPage>\n\n    <Copy\n      v-if=\"copyFormVisible\"\n      :item_id=\"item_id\"\n      :cat_id=\"curl_cat_id\"\n      :callback=\"copyCallback\"\n    ></Copy>\n    <Footer> </Footer>\n  </div>\n</template>\n\n<script>\nimport SortPage from '@/components/page/edit/SortPage'\nimport Copy from './Copy'\nexport default {\n  name: 'Login',\n  components: {\n    SortPage,\n    Copy\n  },\n  data () {\n    return {\n      MyForm: {\n        cat_id: 0,\n        parent_cat_id: '',\n        cid: '',\n        cat_name: '',\n        s_number: ''\n      },\n      lang: [],\n      catalogs: [],\n      dialogFormVisible: false,\n      copyFormVisible: false,\n      treeData: [],\n      btnedit: false,\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      item_id: '',\n      curl_cat_id: ''\n    }\n  },\n  computed: {\n    // 新建/编辑目录时供用户选择的上级目录列表\n    belong_to_catalogs: function () {\n      if (!this.catalogs || this.catalogs.length <= 0) {\n        return []\n      }\n      var Info = this.catalogs.slice(0)\n      var cat_array = []\n      // 这个函数将递归\n      var rename = function (catalog, p_cat_name) {\n        if (catalog.length > 0) {\n          for (var j = 0; j < catalog.length; j++) {\n            var cat_name = p_cat_name + ' / ' + catalog[j].cat_name\n            cat_array.push({\n              cat_id: catalog[j].cat_id,\n              cat_name: cat_name\n            })\n            if (catalog[j].sub && catalog[j].sub.length > 0) {\n              rename(catalog[j].sub, cat_name)\n            }\n          }\n        }\n      }\n      for (var i = 0; i < Info.length; i++) {\n        cat_array.push(Info[i])\n        if (Info[i].sub != null) {\n          rename(Info[i].sub, Info[i].cat_name)\n        }\n      }\n      var no_cat = { cat_id: 0, cat_name: this.$t('none') }\n      cat_array.push(no_cat)\n      return cat_array\n    }\n  },\n  methods: {\n    tableRowClassName ({ row, rowIndex }) {\n      if (row.level === '2') {\n        return 'success-row'\n      }\n      return ''\n    },\n    get_catalog () {\n      var that = this\n      var url = DocConfig.server + '/catListGroup'\n      var params = new URLSearchParams()\n      params.append('item_id', that.$route.params.item_id)\n      that.$http.post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var Info = response.data.data\n            that.catalogs = Info\n            that.treeData = []\n            var duang = function (Info) {\n              var treeData = []\n              for (var i = 0; i < Info.length; i++) {\n                const node = { children: [] }\n                node.id = Info[i].cat_id\n                node.label = Info[i].cat_name\n                node.cid = Info[i].cid\n                if (Info[i].sub && Info[i].sub.length > 0) {\n                  node.children = duang(Info[i].sub)\n                }\n                treeData.push(node)\n              }\n              return treeData\n            }\n            that.treeData = duang(Info)\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    get_lang () {\n      var that = this\n      var url = DocConfig.server + '/lang'\n      var params = new URLSearchParams()\n      that.$http.get(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var lang = response.data.data\n            // 创建上级目录选项\n            var Lang2 = lang.slice(0)\n            var no_cat = { ID: 0, name: that.$t('none') }\n            Lang2.unshift(no_cat)\n            that.lang = Lang2\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    MyFormSubmit () {\n      var that = this\n      var url = DocConfig.server + '/catalogs/save'\n      var params = new URLSearchParams()\n      params.append('itemid', that.$route.params.item_id)\n      params.append('catid', this.MyForm.cat_id)\n      params.append('parentcatid', this.MyForm.parent_cat_id)\n      params.append('catname', this.MyForm.cat_name)\n      params.append('cid', this.MyForm.cid)\n      that.$http.post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            that.dialogFormVisible = false\n            that.get_catalog()\n            that.MyForm = []\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    edit (node, data) {\n      console.log(node)\n      this.MyForm = {\n        cat_id: data.id,\n        parent_cat_id: node.parent.data.id,\n        cat_name: data.label,\n        cid: data.cid\n      }\n      this.dialogFormVisible = true\n    },\n    delete_cat (node, data) {\n      var that = this\n      var cat_id = data.id\n      var url = DocConfig.server + `/delcatalogs/${cat_id}`\n      this.$confirm(that.$t('confirm_delete'), ' ', {\n        confirmButtonText: that.$t('confirm'),\n        cancelButtonText: that.$t('cancel'),\n        type: 'warning'\n      }).then(() => {\n        var params = new URLSearchParams()\n        params.append('item_id', that.$route.params.item_id)\n        that.$http.post(url, params)\n          .then(function (response) {\n            if (response.data.status === 200) {\n              that.get_catalog()\n            } else {\n              that.$alert(response.data.message)\n            }\n          })\n      })\n    },\n    resetForm () {\n      this.MyForm = {\n        cat_id: 0,\n        parent_cat_id: '',\n        cat_name: '',\n        s_number: '',\n        cid: ''\n      }\n    },\n    add_cat (node, data) {\n      if (node && data.id) {\n        this.MyForm = {\n          cat_id: '',\n          parent_cat_id: data.id,\n          cat_name: '',\n          s_number: '',\n          cid: ''\n        }\n      } else {\n        this.resetForm()\n      }\n      this.dialogFormVisible = true\n    },\n    goback () {\n      var url = '/' + this.$route.params.item_id\n      this.$router.push({ path: url })\n    },\n    async handleDragEnd (node1, node2, position, evt) {\n      const treeData2 = this.dimensionReduction(this.treeData)\n      var url = DocConfig.server + '/catalog/batUpdate'\n      var formdata = new FormData()\n      formdata.append('item_id', this.$route.params.item_id)\n      formdata.append('cats', JSON.stringify(treeData2))\n      const { data: res } = await this.$http.post(url, formdata)\n      if (res.status === 200) {}\n    },\n    // 将目录数组降维\n    dimensionReduction (treeData) {\n      const treeData2 = []\n      var pushTreeData = function (OneData, parent_cat_id, level, i) {\n        treeData2.push({\n          cat_id: OneData.id,\n          cat_name: OneData.label,\n          parent_cat_id: parent_cat_id,\n          level: level,\n          s_number: i + 1\n        })\n        if (Object.prototype.hasOwnProperty.call(OneData, 'children')) {\n          for (var j = 0; j < OneData.children.length; j++) {\n            pushTreeData(OneData.children[j], OneData.id, level + 1, j)\n          }\n        }\n      }\n      for (var i = 0; i < treeData.length; i++) {\n        pushTreeData(treeData[i], 0, 2, i)\n      }\n      return treeData2\n    },\n    // 展示页面排序\n    showSortPage (node, data) {\n      this.curl_cat_id = data.id\n      const childRef = this.$refs.SortPage // 获取子组件\n      childRef.show()\n    },\n    copyCat (node, data) {\n      this.curl_cat_id = data.id\n      this.copyFormVisible = true\n    },\n    copyCallback () {\n      this.copyFormVisible = false\n      this.get_catalog()\n    }\n  },\n  mounted () {\n    this.get_catalog()\n    this.get_lang()\n    this.item_id = this.$route.params.item_id\n  },\n  beforeDestroy () {}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.hello{\n  text-align: left;\n}\n.add-cat{\n  margin-left: 10px;\n}\n.center-card{\n  text-align: left;\n  width: 800px;\n  height: 700px;\n}\n.goback-btn{\n  z-index: 999;\n  margin-left: 400px;\n}\n.cat-box {\n  background-color: rgb(250, 250, 250);\n  width: 100%;\n  height: 40px;\n  margin-bottom: 10px;\n  border: 1px solid #d9d9d9;\n  border-radius: 2px;\n}\n.cat-name {\n  line-height: 40px;\n  margin-left: 20px;\n  color: #262626;\n}\n.tree-node {\n  margin-top: 20px;\n}\n.custom-tree-node {\n  width: 100%;\n}\n.right-bar {\n  float: right;\n  margin-right: 20px;\n}\n.tips {\n  margin-left: 10px;\n  color: #9ea1a6;\n  font-size: 11px;\n}\n</style>\n\n<!-- 全局css -->\n<style >\n.el-table .success-row {\n  background: #f0f9eb;\n}\n</style>\n"]}]}