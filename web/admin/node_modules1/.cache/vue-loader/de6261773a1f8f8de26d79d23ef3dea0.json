{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/export/Index.vue?vue&type=style&index=0&id=2d7086b3&scoped=true&lang=css&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/export/Index.vue","mtime":1617675679081},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNlbnRlci1jYXJkIGEgewogIGZvbnQtc2l6ZTogMTJweDsKfQouY2VudGVyLWNhcmQgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICB3aWR0aDogNDAwcHg7Cn0KLm1hcmtkb3duLXRpcHMgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IDI1cHg7CiAgZm9udC1zaXplOiAxMnB4Owp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components/item/export","sourcesContent":["<template>\n  <div class=\"hello\">\n    <Header></Header>\n\n    <el-container>\n      <el-card class=\"center-card\">\n        <el-form status-icon label-width=\"0px\" class=\"demo-ruleForm\">\n          <h2></h2>\n          <el-form-item label>\n            <el-radio-group v-model=\"export_format\">\n              <el-radio-button label=\"word\">{{$t('export_format_word')}}</el-radio-button>\n              <el-radio-button label=\"markdown\">{{$t('export_format_markdown')}}</el-radio-button>\n            </el-radio-group>\n          </el-form-item>\n\n          <el-form-item label v-if=\"export_format == 'word'\">\n            <el-radio v-model=\"export_type\" label=\"1\">{{$t('export_all')}}</el-radio>\n            <el-radio v-model=\"export_type\" label=\"2\">{{$t('export_cat')}}</el-radio>\n          </el-form-item>\n\n          <el-form-item label v-if=\"export_format == 'markdown'\">\n            <p class=\"markdown-tips\">{{$t('export_markdown_tips')}}</p>\n          </el-form-item>\n\n          <el-form-item label v-if=\"export_format == 'word' && export_type == 2\">\n            <el-select\n              :placeholder=\"$t('catalog')\"\n              class=\"cat\"\n              v-model=\"cat_id\"\n              v-if=\"computed_catalogs\"\n              @change=\"get_pages\"\n            >\n              <el-option\n                v-for=\"cat in computed_catalogs \"\n                :key=\"cat.cat_name\"\n                :label=\"cat.cat_name\"\n                :value=\"cat.cat_id\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label v-if=\"export_format == 'word' && export_type == 2\">\n            <el-select class=\"cat\" v-model=\"page_id\" v-if=\"pages\">\n              <el-option\n                v-for=\"page in pages \"\n                :key=\"page.page_title\"\n                :label=\"page.page_title\"\n                :value=\"page.page_id\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label>\n            <el-button type=\"primary\" style=\"width:100%;\" @click=\"onSubmit\">{{$t('begin_export')}}</el-button>\n          </el-form-item>\n\n          <el-form-item label>\n            <el-button type=\"text\" @click=\"goback\" class=\"goback-btn\">{{$t('goback')}}</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </el-container>\n\n    <Footer></Footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  components: {},\n  data () {\n    return {\n      catalogs: [],\n      cat_id: '',\n      export_type: '1',\n      item_id: 0,\n      export_format: 'word',\n      pages: [{\n        page_id: '0',\n        page_title: this.$t('all_pages')\n      }],\n      page_id: '0'\n    }\n  },\n  computed: {\n    // 新建/编辑页面时供用户选择的归属目录列表\n    computed_catalogs: function () {\n      var Info = this.catalogs.slice(0)\n      var cat_array = []\n      for (var i = 0; i < Info.length; i++) {\n        cat_array.push(Info[i])\n        var sub = Info[i].sub\n        if (sub.length > 0) {\n          for (var j = 0; j < sub.length; j++) {\n            cat_array.push({\n              cat_id: sub[j].ID,\n              cat_name: Info[i].name + ' / ' + sub[j].name\n            })\n            var sub_sub = sub[j].sub\n            if (sub_sub.length > 0) {\n              for (var k = 0; k < sub_sub.length; k++) {\n                cat_array.push({\n                  cat_id: sub_sub[k].ID,\n                  cat_name:\n                    Info[i].name +\n                    ' / ' +\n                    sub[j].name +\n                    ' / ' +\n                    sub_sub[k].name\n                })\n              }\n            }\n          }\n        }\n      }\n      var no_cat = { cat_id: '', cat_name: this.$t('none') }\n      cat_array.unshift(no_cat)\n      return cat_array\n    }\n  },\n  methods: {\n    // 获取所有目录\n    get_catalog (item_id) {\n      var that = this\n      var url = this.DocConfig.server + '/catListGroup'\n      var params = new URLSearchParams()\n      params.append('item_id', item_id)\n      that.axios\n        .post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var Info = response.data.data\n            that.catalogs = Info\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    onSubmit () {\n      if (this.export_type === 1) {\n        this.cat_id = ''\n      }\n      var url =\n        this.DocConfig.server +\n        '/api/export/word&item_id=' +\n        this.item_id +\n        '&cat_id=' +\n        this.cat_id + '&page_id=' + this.page_id\n      if (this.export_format === 'markdown') {\n        url = this.DocConfig.server + '/api/export/markdown&item_id=' + this.item_id\n      }\n      window.location.href = url\n    },\n    goback () {\n      this.$router.go(-1)\n    },\n    // 获取某目录下的所有页面\n    get_pages (cat_id) {\n      var that = this\n      var url = this.DocConfig.server + '/catalog/getPagesBycat'\n      var params = new URLSearchParams()\n      params.append('item_id', this.item_id)\n      params.append('cat_id', cat_id)\n      that.axios\n        .post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var pages = response.data.data\n            pages.unshift({\n              page_id: '0',\n              page_title: that.$t('all_pages')\n            })\n            that.pages = pages\n            that.page_id = '0'\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n    }\n  },\n  mounted () {\n    this.get_catalog(this.$route.params.item_id)\n    this.item_id = this.$route.params.item_id\n  },\n  beforeDestroy () {}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.center-card a {\n  font-size: 12px;\n}\n.center-card {\n  text-align: center;\n  width: 400px;\n}\n.markdown-tips {\n  text-align: left;\n  margin-left: 25px;\n  font-size: 12px;\n}\n</style>\n"]}]}