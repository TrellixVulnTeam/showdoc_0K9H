{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/add/Import.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/add/Import.vue","mtime":1623222289092},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCnZhciB0b2tlbiA9ICBgQmVhcmVyICR7d2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyl9YApleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xvZ2luJywKICBjb21wb25lbnRzOiB7fSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGFwaV9rZXk6ICcnLAogICAgICBhcGlfdG9rZW46ICcnLAogICAgICBsb2FkaW5nOiAnJywKICAgICAgdXBsb2FkX3VybDogRG9jQ29uZmlnLnNlcnZlciArICcvaW1wb3J0L2F1dG8nLAogICAgICBteUhlYWRlcnM6IHtBdXRob3JpemF0aW9uOiB0b2tlbn0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Y2Nlc3MgKGRhdGEpIHsKICAgICAgdGhpcy5sb2FkaW5nLmNsb3NlKCkKICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSAyMDApIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGg6ICcvaXRlbS9pbmRleCcgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRhbGVydChkYXRhLm1lc3NhZ2UpCiAgICAgIH0KICAgIH0sCiAgICBiZWZvcmVVcGxvYWQgKCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLiRsb2FkaW5nKCkKICAgIH0KICB9LAogIG1vdW50ZWQgKCkge30KfQo="},{"version":3,"sources":["Import.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Import.vue","sourceRoot":"src/components/item/add","sourcesContent":["<template>\n  <div class=\"hello\">\n    <p class=\"tips\">\n      <span v-html=\"$t('import_file_tips1')\"></span>\n    </p>\n\n    <p>\n      <el-upload\n        class=\"upload-demo\"\n        drag\n        name=\"file\"\n        :action=\"upload_url\"\n        :on-success=\"success\"\n        :before-upload=\"beforeUpload\"\n        :show-file-list=\"false\"\n        :with-credentials=\"true\"\n        :headers=\"myHeaders\"\n      >\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">\n          <span v-html=\"$t('import_file_tips2')\"></span>\n        </div>\n      </el-upload>\n    </p>\n    <p></p>\n    <p></p>\n  </div>\n</template>\n\n<script>\nvar token =  `Bearer ${window.sessionStorage.getItem('token')}`\nexport default {\n  name: 'Login',\n  components: {},\n  data () {\n    return {\n      api_key: '',\n      api_token: '',\n      loading: '',\n      upload_url: DocConfig.server + '/import/auto',\n      myHeaders: {Authorization: token}\n    }\n  },\n  methods: {\n    success (data) {\n      this.loading.close()\n      if (data.status === 200) {\n        this.$router.push({ path: '/item/index' })\n      } else {\n        this.$alert(data.message)\n      }\n    },\n    beforeUpload () {\n      this.loading = this.$loading()\n    }\n  },\n  mounted () {}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.hello {\n  text-align: left;\n  margin-left: 10px;\n  margin-top: 30px;\n}\n.tips {\n  margin-left: 5px;\n  margin-bottom: 20px;\n  color: #9ea1a6;\n  padding: 10px;\n}\n</style>\n"]}]}