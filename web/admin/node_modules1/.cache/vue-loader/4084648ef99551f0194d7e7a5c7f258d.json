{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/show/show_table_item/Index.vue?vue&type=style&index=0&id=35a40b20&scoped=true&lang=css&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/show/show_table_item/Index.vue","mtime":1624963047123},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVkaXQtYmFyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDEwcHg7CiAgbWFyZ2luLXRvcDogNXB4Owp9Ci5lZGl0LWJhciA+IGJ1dHRvbiB7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components/item/show/show_table_item","sourcesContent":["<template>\n  <div class=\"hello\">\n    <link href=\"static/xspreadsheet/xspreadsheet.css\" rel=\"stylesheet\" />\n    <div id=\"header\"></div>\n    <div class=\"edit-bar\" v-if=\"item_info.itempermn\">\n      <el-button type=\"primary\" size=\"mini\" @click=\"save\">{{$t('save')}}</el-button>\n      <el-dropdown @command=\"dropdownCallback\">\n        <el-button size=\"mini\">\n          {{$t('more')}}\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item :command=\"shareItem\">{{$t('share')}}</el-dropdown-item>\n          <router-link :to=\"'/item/setting/'+item_info.id\" v-if=\"item_info.itemcreator\">\n            <el-dropdown-item>{{$t('item_setting')}}</el-dropdown-item>\n          </router-link>\n          <el-dropdown-item :command=\"()=>{importDialogVisible = true}\">{{$t('import_file')}}</el-dropdown-item>\n          <el-dropdown-item :command=\"exportFile\">{{$t('export')}}</el-dropdown-item>\n          <el-dropdown-item :command=\"goback\">{{$t('goback')}}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n    <div class=\"edit-bar\" v-if=\"!item_info.itempermn\">\n      <el-button size=\"mini\" @click=\"goback\">{{$t('goback')}}</el-button>\n    </div>\n    <div id=\"table-item\"></div>\n    <el-dialog\n      :title=\"$t('share')\"\n      :visible.sync=\"dialogVisible\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n      class=\"text-center\"\n    >\n      <p>\n        {{$t('item_address')}} :\n        <code>{{share_item_link}}</code>\n      </p>\n      <p>\n        <a\n          href=\"javascript:;\"\n          class=\"home-phone-butt\"\n          v-clipboard:copyhttplist=\"copyText\"\n          v-clipboard:success=\"onCopy\"\n        >{{$t('copy_link')}}</a>\n      </p>\n      <p style=\"border-bottom: 1px solid #eee;\">\n        <img id style=\"width:114px;height:114px;\" :src=\"qr_item_link\" />\n      </p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogVisible = false\">{{$t('confirm')}}</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog\n      :title=\"$t('import_excel')\"\n      :visible.sync=\"importDialogVisible\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n      class=\"text-center\"\n    >\n      <p>\n        <input\n          type=\"file\"\n          name=\"xlfile\"\n          id=\"xlf\"\n          @change=\"(e)=>{\n            improtFile(e.target.files)\n          }\"\n        />\n      </p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"importDialogVisible = false\">{{$t('confirm')}}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<style scoped>\n.edit-bar {\n  position: absolute;\n  right: 10px;\n  margin-top: 5px;\n}\n.edit-bar > button {\n  margin-right: 10px;\n}\n</style>\n\n<script>\nvar $s = require('scriptjs')\nexport default {\n  props: {\n    item_info: {}\n  },\n  data () {\n    return {\n      menu: '',\n      content: '',\n      page_title: '',\n      page_id: '',\n      dialogVisible: false,\n      share_item_link: '',\n      qr_item_link: '',\n      copyText: '',\n      spreadsheetObj: {},\n      spreadsheetData: {},\n      isLock: 0,\n      isEditable: 0,\n      intervalId: 0,\n      importDialogVisible: false\n    }\n  },\n  components: {},\n  methods: {\n    async getPageContent (page_id) {\n      var that = this\n      var url = DocConfig.server + '/admin/page'\n      if (!page_id) {\n        page_id = that.page_id\n      }\n      var formdata = new FormData()\n      formdata.append('page_id', page_id)\n      const { data: res } = await this.$http.post(url, formdata)\n      if (res.status !== 200) return this.$message.error(res.message)\n      if (res.data.pagecontent) {\n        let objData\n        try {\n          // 先定义一个html反转义的函数\n          const unescapeHTML = str =>\n            str.replace(\n              /&amp;|&lt;|&gt;|&#39;|&quot;/g,\n              tag =>\n                ({\n                  '&amp;': '&',\n                  '&lt;': '<',\n                  '&gt;': '>',\n                  '&#39;': \"'\",\n                  '&quot;': '\"'\n                }[tag] || tag)\n            )\n          objData = JSON.parse(\n            unescapeHTML(res.data.pagecontent)\n          )\n        } catch (error) {\n          objData = {}\n        }\n        this.spreadsheetData = objData\n        // 初始化表格\n        this.initSheet()\n        if (this.item_info.itempermn) {\n          this.draft()\n        }\n      }\n    },\n    initSheet () {\n      if (!x_spreadsheet) return false\n      const mode = this.isEditable ? 'edit' : 'read'\n      document.getElementById('table-item').innerHTML = '' // 清空原来的东西\n      this.spreadsheetObj = null\n      // 初始化表格\n      this.spreadsheetObj = x_spreadsheet('#table-item', {\n        mode: mode, // edit | read\n        showToolbar: true,\n        row: {\n          len: 500,\n          height: 25\n        }\n      }).loadData(this.spreadsheetData) // load data\n    },\n    shareItem () {\n      const path = this.item_info.item_domain\n        ? this.item_info.item_domain\n        : this.item_info.id\n      this.share_item_link = this.getRootPath() + '#/' + path\n      this.qr_item_link =\n        DocConfig.server +\n        '/common/qrcode&size=3&url=' +\n        encodeURIComponent(this.share_item_link)\n      this.dialogVisible = true\n      this.copyText =\n        this.item_info.item_name + '  -- Doc \\r\\n' + this.share_item_link\n    },\n    onCopy () {\n      this.$message(this.$t('copy_success'))\n    },\n    async save () {\n      var url = DocConfig.server + '/page/save'\n      var formdata = new FormData()\n      formdata.append('page_id', this.page_id)\n      formdata.append('page_title', this.item_info.itemtitle)\n      formdata.append('item_id', this.item_info.id)\n      formdata.append('is_urlencode', 1)\n      formdata.append('page_content', encodeURIComponent(\n        JSON.stringify(this.spreadsheetObj.getData())\n      ))\n\n      const { data: res } = await this.$http.post(url, formdata)\n      if (res.status === 200) {\n        this.$message({\n          showClose: true,\n          message: '保存成功',\n          type: 'success'\n        })\n        // 删除草稿\n        this.deleteDraft()\n      }\n    },\n    goback () {\n      this.$router.push({\n        path: '/item/index'\n      })\n      // 由于x_spreadsheet的固有缺陷，只能重新刷新销毁实例了\n      setTimeout(() => {\n        window.location.reload()\n      }, 200)\n    },\n    dropdownCallback (data) {\n      if (data) {\n        data()\n      }\n    },\n    // 草稿\n    draft () {\n      var that = this\n      var pkey = 'page_content_' + this.page_id\n      // 定时保存文本内容到localStorage\n      setInterval(() => {\n        var content = JSON.stringify(this.spreadsheetObj.getData())\n        localStorage.setItem(pkey, content)\n      }, 30 * 1000)\n      // 检测是否有定时保存的内容\n      var page_content = JSON.parse(localStorage.getItem(pkey))\n      if (\n        page_content &&\n        page_content.length > 0 &&\n        localStorage.getItem(pkey) !==\n          JSON.stringify(this.spreadsheetObj.getData())\n      ) {\n        localStorage.removeItem(pkey)\n        that\n          .$confirm(that.$t('draft_tips'), '', {\n            showClose: false\n          })\n          .then(() => {\n            this.spreadsheetData = page_content\n            // 初始化表格\n            this.initSheet()\n            localStorage.removeItem(pkey)\n          })\n          .catch(() => {\n            localStorage.removeItem(pkey)\n          })\n      }\n    },\n    // 遍历删除草稿\n    deleteDraft () {\n      for (var i = 0; i < localStorage.length; i++) {\n        var name = localStorage.key(i)\n        if (name.indexOf('page_content_') > -1) {\n          localStorage.removeItem(name)\n        }\n      }\n    },\n    // 锁定\n    async setLock () {\n      var url = DocConfig.server + '/page/setLock'\n      var formdata = new FormData()\n      formdata.append('page_id', this.page_id)\n      formdata.append('item_id', this.item_info.id)\n      if (this.page_id > 0) {\n        const { data: res } = await this.$http.post(url, formdata)\n        if (res.status === 200) {\n          this.isLock = 1\n        }\n      }\n    },\n    // 解除锁定\n    async unlock () {\n      if (!this.isLock) {\n        return // 本来处于未锁定中的话，不发起请求\n      }\n      var url = DocConfig.server + '/page/setLock'\n      var formdata = new FormData()\n      formdata.append('page_id', this.page_id)\n      formdata.append('item_id', this.item_info.id)\n      formdata.append('lock_to', 1000)\n      const { data: res } = await this.$http.post(url, formdata)\n      if (res.status === 200) {\n        this.isLock = 0\n      }\n    },\n    // 如果用户处于锁定状态的话，用心跳保持锁定\n    heartBeatLock () {\n      this.intervalId = setInterval(() => {\n        if (this.isLock) {\n          this.setLock()\n        }\n      }, 3 * 60 * 1000)\n    },\n    // 判断页面是否被锁定编辑\n    async remoteIsLock () {\n      var url = DocConfig.server + '/page/isLock'\n      var formdata = new FormData()\n      formdata.append('page_id', this.page_id)\n      const { data: res } = await this.$http.post(url, formdata)\n      // 判断已经锁定了不\n      if (res.data.lock > 0) {\n        if (res.data.isCurUser > 0) {\n          this.isLock = 1\n          this.isEditable = 1\n          this.initSheet()\n          this.heartBeatLock()\n        } else {\n          this.$alert(this.$t('locking') + res.data.lockUsername)\n          this.item_info.itempermn = false\n          clearInterval(this.intervalId)\n          this.deleteDraft()\n        }\n      } else {\n        this.setLock() // 如果没有被别人锁定，则进编辑页面后自己锁定。\n        this.isEditable = 1\n        this.initSheet()\n        this.heartBeatLock()\n      }\n    }\n  },\n  exportFile () {\n    // 先定义一个函数\n    const xtos = sdata => {\n      var out = XLSX.utils.book_new()\n      sdata.forEach(function (xws) {\n        var aoa = [[]]\n        var rowobj = xws.rows\n        for (var ri = 0; ri < rowobj.len; ++ri) {\n          var row = rowobj[ri]\n          if (!row) continue\n          aoa[ri] = []\n          Object.keys(row.cells).forEach(function (k) {\n            var idx = +k\n            if (isNaN(idx)) return\n            aoa[ri][idx] = row.cells[k].text\n          })\n        }\n        var ws = XLSX.utils.aoa_to_sheet(aoa)\n        XLSX.utils.book_append_sheet(out, ws, xws.name)\n      })\n      return out\n    }\n    /* build workbook from the grid data */\n    var new_wb = xtos(this.spreadsheetObj.getData())\n    /* generate download */\n    XLSX.writeFile(new_wb, 'showdoc.xlsx')\n  },\n  improtFile (files) {\n    const f = files[0]\n    const stox = wb => {\n      var out = []\n      wb.SheetNames.forEach(function (name) {\n        var o = { name: name, rows: {} }\n        var ws = wb.Sheets[name]\n        var aoa = XLSX.utils.sheet_to_json(ws, { raw: false, header: 1 })\n        aoa.forEach(function (r, i) {\n          var cells = {}\n          r.forEach(function (c, j) {\n            cells[j] = { text: c }\n          })\n          o.rows[i] = { cells: cells }\n        })\n        out.push(o)\n      })\n      return out\n    }\n    var reader = new FileReader()\n    reader.onload = e => {\n      var data = e.target.result\n      var mdata = stox(XLSX.read(data, { type: 'array' }))\n      if (mdata) {\n        /* update x-spreadsheet */\n        this.spreadsheetObj.loadData(mdata)\n        this.importDialogVisible = false\n      }\n    }\n    reader.readAsArrayBuffer(f)\n  },\n  mounted () {\n    this.menu = this.item_info.menu\n    this.page_id = this.menu.pages[0].ID\n    // 加载依赖\"\"\n    $s(['static/xspreadsheet/xspreadsheet.js'], () => {\n      $s(\n        [\n          'static/xspreadsheet/locale/zh-cn.js',\n          'static/xspreadsheet/locale/en.js'\n        ],\n        () => {\n          if (DocConfig.lang === 'en') {\n            x_spreadsheet.locale('en')\n          } else {\n            x_spreadsheet.locale('zh-cn')\n          }\n          this.getPageContent()\n          if (this.item_info.itempermn) {\n            this.remoteIsLock()\n          }\n        }\n      )\n      $s(['static/xspreadsheet/xlsx.full.min.js'])\n    })\n  },\n  beforeDestroy () {\n    this.$message.closeAll()\n    clearInterval(this.intervalId)\n    this.unlock()\n  }\n}\n</script>\n"]}]}