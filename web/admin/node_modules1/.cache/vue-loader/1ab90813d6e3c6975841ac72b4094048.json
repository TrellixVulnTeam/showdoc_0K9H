{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/notice/Index.vue?vue&type=style&index=0&id=71b28d4b&scoped=true&lang=css&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/notice/Index.vue","mtime":1619574651003},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2VudGVyLWNhcmQgYSB7CiAgZm9udC1zaXplOiAxMnB4Owp9Ci5jZW50ZXItY2FyZHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgd2lkdGg6IDY1MHB4OwogIGhlaWdodDogNTAwcHg7Cn0KLmluZm9Gb3JtewogIHdpZHRoOjM1MHB4OwogIG1hcmdpbi1sZWZ0OiA2MHB4OwogIG1hcmdpbi10b3A6IDMwcHg7Cn0KLmdvYmFjay1idG57CiAgbWFyZ2luLWxlZnQ6IDUwMHB4Owp9Ci5mZWVkYmFja3sKICBmb250LXNpemU6IDEycHg7CiAgbWFyZ2luLXJpZ2h0OiAzMHB4Owp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components/notice","sourcesContent":["<template>\n  <div class=\"hello\">\n    <Header> </Header>\n    <el-container>\n          <el-card class=\"center-card\">\n          <template>\n            <el-button type=\"text\" class=\"goback-btn \" ><span class=\"feedback\" @click=\"feedback\">反馈</span><router-link to=\"/item/index\">返回</router-link></el-button>\n            <el-tabs  value=\"first\" type=\"card\">\n              <el-tab-pane label=\"我的消息\" name=\"first\">\n               <el-table align=\"left\"\n                    :data=\"allList\"\n                     height=\"350\"\n                     :default-expand-all=\"false\"\n                    style=\"width: 100%\">\n                    <el-table-column\n                      prop=\"notice_title\"\n                      label=\"标题\"\n                      >\n                    <template slot-scope=\"props\" >\n                      <span v-html=\"props.row.notice_title\"></span>\n                      <el-badge class=\"mark\" value=\"未读\" v-if=\"props.row.is_read == 0\"/>\n                    </template>\n                    </el-table-column>\n                    <el-table-column\n                      prop=\"from_name\"\n                      label=\"发送人\">\n                    </el-table-column>\n                    <el-table-column\n                      prop=\"notice_time\"\n                      label=\"时间\"\n                      width=\"100\">\n                    </el-table-column>\n                    <el-table-column\n                      prop=\"\"\n                      label=\"操作\">\n                      <template slot-scope=\"scope\">\n                        <el-button @click=\"show_notice(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\n                        <el-button @click=\"delete_notice(scope.row)\" type=\"text\" size=\"small\">删除</el-button>\n                      </template>\n                    </el-table-column>\n                  </el-table>\n            </el-tab-pane>\n            </el-tabs>\n          </template>\n          </el-card>\n    </el-container>\n    <Footer> </Footer>\n\n  </div>\n</template>\n<script>\n\nexport default {\n  name: 'Login',\n  components: {\n  },\n  data () {\n    return {\n      unreadList: [],\n      allList: []\n    }\n  },\n  methods: {\n    getList (noticeType) {\n      if (!noticeType) {\n        noticeType = 'all'\n      }\n      var that = this\n      var url = this.DocConfig.server + '/api/notice/getList'\n      var params = new URLSearchParams()\n      params.append('notice_type', noticeType)\n      that.axios.post(url, params)\n        .then(function (response) {\n          if (response.data.status === 2000) {\n            var Info = response.data.data\n            if (noticeType === 'unread') {\n              that.unreadList = Info\n            } else {\n              that.allList = Info\n            }\n          } else {\n            that.$alert(response.data.error_message)\n          }\n        })\n    },\n    showNotice (row) {\n      var noticeId = row.notice_id\n      row.isRread = 1\n      var that = this\n      that.$alert(row.notice_content, '', {\n        dangerouslyUseHTMLString: true\n      })\n      var url = this.DocConfig.server + '/api/notice/setRead'\n      var params = new URLSearchParams()\n      params.append('notice_id', noticeId)\n      that.axios.post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var Info = response.data.data\n            that.$alert = Info\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n    },\n    deleteNotice (row) {\n      var noticeId = row.notice_id\n      var that = this\n      var url = this.DocConfig.server + '/api/notice/delete'\n      this.$confirm('确认删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        var params = new URLSearchParams()\n        params.append('notice_id', noticeId)\n        that.axios.post(url, params)\n          .then(function (response) {\n            if (response.data.status === 200) {\n              that.getList()\n            } else {\n              that.$alert(response.data.message)\n            }\n          })\n      })\n    },\n    feedback () {\n      this.$alert('对doc.cc的任何疑问、建议都可以反馈到 xing7th@gmail.com')\n    }\n  },\n  mounted () {\n    this.getList()\n  },\n  beforeCreate () {\n    // *给body添加类，设置背景色*/\n    document.getElementsByTagName('body')[0].className = 'grey-bg'\n  },\n  beforeDestroy () {\n    // 去掉添加的背景色*/\n    document.body.removeAttribute('class', 'grey-bg')\n  }\n\n}\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.center-card a {\n  font-size: 12px;\n}\n.center-card{\n  text-align: center;\n  width: 650px;\n  height: 500px;\n}\n.infoForm{\n  width:350px;\n  margin-left: 60px;\n  margin-top: 30px;\n}\n.goback-btn{\n  margin-left: 500px;\n}\n.feedback{\n  font-size: 12px;\n  margin-right: 30px;\n}\n</style>\n"]}]}