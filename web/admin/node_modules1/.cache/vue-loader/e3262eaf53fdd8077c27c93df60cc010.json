{"remainingRequest":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/setting/Info.vue?vue&type=style&index=0&id=641b9940&scoped=true&lang=css&","dependencies":[{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/src/components/item/setting/Info.vue","mtime":1629688077825},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmy_c/go/src/awesomeProject3/web/admin/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jZW50ZXItY2FyZCBhIHsKICBmb250LXNpemU6IDEycHg7Cn0KLmNlbnRlci1jYXJkIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgd2lkdGg6IDYwMHB4OwogIGhlaWdodDogNTAwcHg7Cn0KLmluZm9Gb3JtIHsKICB3aWR0aDogMzUwcHg7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7CiAgbWFyZ2luLXRvcDogNjBweDsKfQouZ29iYWNrLWJ0biB7CiAgei1pbmRleDogOTk5OwogIG1hcmdpbi1sZWZ0OiA1MDBweDsKfQo="},{"version":3,"sources":["Info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Info.vue","sourceRoot":"src/components/item/setting","sourcesContent":["<template>\n  <div class=\"hello\">\n    <el-form status-icon label-width=\"100px\" class=\"infoForm\" v-model=\"infoForm\">\n      <el-form-item>\n        <el-input type=\"text\" auto-complete=\"off\" v-model=\"infoForm.titlename\" placeholder></el-input>\n      </el-form-item>\n\n      <el-form-item>\n        <el-input\n          type=\"text\"\n          auto-complete=\"off\"\n          v-model=\"infoForm.description\"\n          :placeholder=\"$t('item_description')\"\n        ></el-input>\n      </el-form-item>\n\n      <el-form-item label>\n        <el-radio v-model=\"isOpenItem\" :label=\"true\">{{$t('Open_item')}}</el-radio>\n        <el-radio v-model=\"isOpenItem\" :label=\"false\">{{$t('private_item')}}</el-radio>\n        <el-switch v-model=\"is_comment\" active-text=\"开启评论\" inactive-text=\"关闭评论\" ></el-switch>\n      </el-form-item>\n      <el-form-item>\n      <div>\n        <el-checkbox-group v-model=\"dataIntArr\" size=\"mini\" @change=\"handleClick\" :border=\"true\">\n        <el-checkbox-button v-for=\"langs in lang\" :label=\"langs.id\" :key=\"langs.id\">{{langs.name}}</el-checkbox-button>\n        </el-checkbox-group>\n      </div>\n      </el-form-item>\n\n      <el-form-item v-show=\"!isOpenItem\">\n        <el-input\n          type=\"password\"\n          auto-complete=\"off\"\n          v-model=\"infoForm.password\"\n          :placeholder=\"$t('visit_password')\"\n        ></el-input>\n      </el-form-item>\n\n      <el-form-item label>\n        <el-button type=\"primary\" style=\"width:100%;\" @click=\"FormSubmit\">{{$t('submit')}}</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  components: {},\n  data () {\n    return {\n      infoForm: {},\n      isOpenItem: true,\n      lang: [],\n      checkboxGroup3:[],\n      list:[],\n      dataIntArr:[],\n      is_comment: false,\n    }\n  },\n  methods: {\n    get_item_info () {\n      var that = this\n      var url = DocConfig.server + '/item/detail'\n      var params = new URLSearchParams()\n      params.append('item_id', that.$route.params.item_id)\n      that.$http\n        .post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var Info = response.data.data\n            if (Info.password) {\n              that.isOpenItem = false\n            }\n            if (Info.is_comment == 1 ) {\n               that.is_comment = true\n            }\n            that.infoForm = Info\n            var langInfo =that.infoForm.lang_list.split(',')\n            langInfo.forEach(item => {\n            that.dataIntArr.push(+item)\n            })\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    handleClick(tab) {\n      this.list = tab\n    },\n    FormSubmit () {\n      var that = this\n      var url = DocConfig.server + '/item/update'\n      if (!this.isOpenItem && !this.infoForm.password) {\n        that.$alert(that.$t('private_item_passwrod'))\n        return false\n      }\n      if (this.isOpenItem) {\n        this.infoForm.password = ''\n      }\n      var params = new URLSearchParams()\n      params.append('item_id', that.$route.params.item_id)\n      params.append('title', this.infoForm.titlename)\n      params.append('description', this.infoForm.description)\n      params.append('commendSwitch', this.is_comment)\n      params.append('password', this.infoForm.password)\n      params.append('langlist', this.list)\n      that.$http\n        .post(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            that.$message.success(response.data.message)\n          } else {\n            that.$alert(response.data.message)\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    get_lang () {\n      var that = this\n      var url = DocConfig.server + '/lang'\n      var params = new URLSearchParams()\n      that.$http.get(url, params)\n        .then(function (response) {\n          if (response.data.status === 200) {\n            var lang = response.data.data\n            // 创建上级目录选项\n            var Lang2 = lang.slice(0)\n            that.lang = Lang2\n\n          }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n  },\n  mounted () {\n    this.get_item_info()\n    this.get_lang()\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.center-card a {\n  font-size: 12px;\n}\n.center-card {\n  text-align: center;\n  width: 600px;\n  height: 500px;\n}\n.infoForm {\n  width: 350px;\n  margin-left: 20px;\n  margin-top: 60px;\n}\n.goback-btn {\n  z-index: 999;\n  margin-left: 500px;\n}\n</style>\n"]}]}